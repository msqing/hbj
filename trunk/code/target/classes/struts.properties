### START SNIPPET: complete_file

### Struts default properties
###(can be overridden by a struts.properties file in the root of the classpath)
###

### Specifies the Configuration used to configure Struts 
### one could extend org.apache.struts2.config.Configuration
### to build one's customize way of getting the configurations parameters into Struts
# struts.configuration=org.apache.struts2.config.DefaultConfiguration

### This can be used to set your default locale and encoding scheme
### 地区
struts.locale=zh_CN
### 国际化编码
struts.i18n.encoding=UTF-8


### specifies the autoWiring logic when using the SpringObjectFactory.
### valid values are: name, type, auto, and constructor (name is the default)
struts.objectFactory = spring
struts.objectFactory.spring.autoWire = name

### indicates to the struts-spring integration if Class instances should be cached
### this should, until a future Spring release makes it possible, be left as true
### unless you know exactly what you are doing!
### valid values are: true, false (true is the default)
struts.objectFactory.spring.useClassCache = true

### if specified, the default object type determiner can be overridden here
### Note: short-hand notation is supported in some cases, such as "tiger" or "notiger"
###       Alternatively, you can provide a com.opensymphony.xwork2.util.ObjectTypeDeterminer implementation name here
### Note: if you have the xwork-tiger.jar within your classpath, GenericsObjectTypeDeterminer is used by default
###       To disable tiger support use the "notiger" property value here.
#struts.objectTypeDeterminer = tiger
#struts.objectTypeDeterminer = notiger

### Parser to handle HTTP POST requests, encoded using the MIME-type multipart/form-data
# struts.multipart.parser=cos
# struts.multipart.parser=pell
struts.multipart.parser=jakarta
# uses javax.servlet.context.tempdir by default
struts.multipart.saveDir=/tmp
struts.multipart.maxSize=104857600

### Load custom property files (does not override struts.properties!)
# struts.custom.properties=application,org/apache/struts2/extension/custom

### How request URLs are mapped to and from actions
struts.mapper.class=org.apache.struts2.dispatcher.mapper.DefaultActionMapper

### Used by the DefaultActionMapper
### You may provide a comma separated list, e.g. struts.action.extension=action,jnlp,do
### 扩展
struts.action.extension=do

### Used by FilterDispatcher
### If true then Struts serves static content from inside its jar. 
### If false then the static content must be available at <context_path>/struts
struts.serve.static=true

### Used by FilterDispatcher
### This is good for development where one wants changes to the static content be
### fetch on each request. 
### NOTE: This will only have effect if struts.serve.static=true
### If true -> Struts will write out header for static contents such that they will
###             be cached by web browsers (using Date, Cache-Content, Pragma, Expires)
###             headers).
### If false -> Struts will write out header for static contents such that they are
###            NOT to be cached by web browser (using Cache-Content, Pragma, Expires
###            headers)
struts.serve.static.browserCache=true

### Set this to false if you wish to disable implicit dynamic method invocation
### via the URL request. This includes URLs like foo!bar.action, as well as params
### like method:bar (but not action:foo). 
### An alternative to implicit dynamic method invocation is to use wildcard 
### mappings, such as <action name="*/*" method="{2}" class="actions.{1}">
### 动态方法调用
struts.enable.DynamicMethodInvocation=true

### use alternative syntax that requires %{} in most places
### to evaluate expressions for String attributes for tags
struts.tag.altSyntax=true

### when set to true, Struts will act much more friendly for developers. This
### includes:
### - struts.i18n.reload = true
### - struts.configuration.xml.reload = true
### - raising various debug or ignorable problems to errors
###   For example: normally a request to foo.action?someUnknownField=true should
###                be ignored (given that any value can come from the web and it
###                should not be trusted). However, during development, it may be
###                useful to know when these errors are happening and be told of
###                them right away.
### 开发模式
### 正式运行一定要改为false!!!!!
struts.devMode=true

### when set to true, resource bundles will be reloaded on _every_ request.
### this is good during development, but should never be used in production
### 国际化资源重新加载
struts.i18n.reload=false

### Standard UI theme
### Change this to reflect which path should be used for JSP control tag templates by default
### 主题
struts.ui.theme = simple
struts.ui.templateDir=template
#sets the default template type. Either ftl, vm, or jsp
struts.ui.templateSuffix=ftl

### Configuration reloading
### This will cause the configuration to reload struts.xml when it is changed
struts.configuration.xml.reload=true

### Location of velocity.properties file.  defaults to velocity.properties
# struts.velocity.configfile = velocity.properties

### Comma separated list of VelocityContext classnames to chain to the StrutsVelocityContext
# struts.velocity.contexts =

### used to build URLs, such as the UrlTag
struts.url.http.port = 80
struts.url.https.port = 443
### possible values are: none, get or all
struts.url.includeParams = none

### Load custom default resource bundles
# struts.custom.i18n.resources=testmessages,testmessages2

### workaround for some app servers that don't handle HttpServletRequest.getParameterMap()
### often used for WebLogic, Orion, and OC4J
struts.dispatcher.parametersWorkaround = false

### configure the Freemarker Manager class to be used
### Allows user to plug-in customised Freemarker Manager if necessary
### MUST extends off org.apache.struts2.views.freemarker.FreemarkerManager
#struts.freemarker.manager.classname=org.apache.struts2.views.freemarker.FreemarkerManager

### See the StrutsBeanWrapper javadocs for more information
struts.freemarker.wrapper.altMap=true

### configure the XSLTResult class to use stylesheet caching.
### Set to true for developers and false for production.
struts.xslt.nocache=false

### A list of configuration files automatically loaded by Struts
struts.configuration.files=struts-default.xml,struts-plugin.xml,struts.xml
struts.ognl.allowStaticMethodAccess=true

### 设置Struts 2是否允许在Action名中使用斜线
struts.enable.SlashesInActionNames=false

###==============================
### convention相关
###==============================
### convention类重新加载
### 正式运行一定要改为false!!!!!
struts.convention.classes.reload=true

### 结果资源所在路径
struts.convention.result.path=/WEB-INF/content/

### 名称首字母小写
struts.convention.action.name.lowercase=true

### 分隔符
### 这个属性是约定当一个Java 类 有多个单词组合成的时候，映射的URL地址的
### 时候访问的格式的分隔符。如果不指定这个属性，Struts默认的分隔符是 “-”，
### 例如 HelloWorldAction 则访问的URL 是Hello-World.action 如果指定这个
### 属性是上面的格式，则是没有分隔符，会按照Java 类名直接映射，例如 
### HelloWorldAction 则访问的URL 是HelloWorld.action
struts.convention.action.name.separator=

### 禁用扫描
struts.convention.action.disableScanning=false

### action后缀
struts.convention.action.suffix=Controller

struts.convention.action.mapAllMatches=true

### 默认包
struts.convention.default.parent.package=default

### 确定搜索包的路径。只要是结尾为action的包都要搜索。basePackage按照默认
### 不用配置，如果配置，只会找以此配置开头的包。locators及locators.basePackage
### 都是一组以逗号分割的字符串。
struts.convention.package.locators=action

### 禁用包搜索
struts.convention.package.locators.disable=false

### 基于什么包
struts.convention.package.locators.basePackage=com.tohours.hbj

### 如果此值设为true，如果一个action的命名空间为/login，名称为
### HelloWorldAction。result返回值是success，默认会找到
### /WEB-INF/pages/login/hello_world.jsp（如果有hello_world_success.jsp
### 就找这个文件，连接符“_”是在
### <constant name="struts.convention.action.name.separator" value="_"/>
### 中配置的）。如果有一个action的result返回值是“error”，就会找
### /WEB-INF/pages /login/hello_world_error.jsp。   
###  
### 如果此值设为false，如果一个action的命名空间为/login，名称为HelloWorldAction。
### result返回值是success，默认会找到/WEB- INF/pages/login/hello_world/index.jsp
### （如果有success.jsp就找这个文件）。如果有一个action的result返回值是“error”，
### 就会找/WEB-INF/pages /login/hello_world/error.jsp。
struts.convention.result.flatLayout=true

### END SNIPPET: complete_file